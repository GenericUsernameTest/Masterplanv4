name: Deploy GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Prepare static bundle
        run: |
          mkdir dist
          cp index.html dist/
          cp profile.html dist/
          cp -R js dist/js
          cp -R images dist/images
          cp -R style.css dist/
          # Include static data / components if desired
          cp -R blocks dist/blocks
          cp -R houses dist/houses
          cp -R components dist/components
          echo "Deployed at $(date)" > dist/version.txt
          # Generate config.js from secrets (optional; secrets must be defined in repo settings)
          cat > dist/config.js <<'CFG'
window.RUNTIME_CONFIG = {
  MAPBOX_TOKEN: ${MAPBOX_TOKEN},
  API_BASE: ${API_BASE},
  GENERATED_AT: "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
};
CFG
          # If secrets are blank the variables will be empty; fallback happens client side.

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
